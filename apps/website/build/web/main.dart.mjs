
// `modulePromise` is a promise to the `WebAssembly.module` object to be
//   instantiated.
// `importObjectPromise` is a promise to an object that contains any additional
//   imports needed by the module that aren't provided by the standard runtime.
//   The fields on this object will be merged into the importObject with which
//   the module will be instantiated.
// This function returns a promise to the instantiated module.
export const instantiate = async (modulePromise, importObjectPromise) => {
    let dartInstance;

    // Prints to the console
    function printToConsole(value) {
      if (typeof dartPrint == "function") {
        dartPrint(value);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(value);
        return;
      }
      if (typeof print == "function") {
        print(value);
        return;
      }

      throw "Unable to print message: " + js;
    }

    // Converts a Dart List to a JS array. Any Dart objects will be converted, but
    // this will be cheap for JSValues.
    function arrayFromDartList(constructor, list) {
      const exports = dartInstance.exports;
      const read = exports.$listRead;
      const length = exports.$listLength(list);
      const array = new constructor(length);
      for (let i = 0; i < length; i++) {
        array[i] = read(list, i);
      }
      return array;
    }

    // A special symbol attached to functions that wrap Dart functions.
    const jsWrappedDartFunctionSymbol = Symbol("JSWrappedDartFunction");

    function finalizeWrapper(dartFunction, wrapped) {
      wrapped.dartFunction = dartFunction;
      wrapped[jsWrappedDartFunctionSymbol] = true;
      return wrapped;
    }

    // Imports
    const dart2wasm = {

_51: (x0,x1) => x0.drawPaint(x1),
_52: (x0,x1,x2) => x0.drawPath(x1,x2),
_53: (x0,x1) => x0.drawPicture(x1),
_54: (x0,x1,x2,x3) => x0.drawVertices(x1,x2,x3),
_55: x0 => x0.restore(),
_56: x0 => ({locateFile: x0}),
_57: (x0,x1) => ({antialias: x0,majorVersion: x1}),
_58: () => new window.flutterCanvasKit.Paint(),
_59: (x0,x1) => ({B: x0,C: x1}),
_60: (x0,x1) => ({filter: x0,mipmap: x1}),
_61: () => new window.flutterCanvasKit.Path(),
_65: () => new window.flutterCanvasKit.PictureRecorder(),
_66: () => ({}),
_67: () => ({}),
_68: () => ({}),
_69: () => ({}),
_71: () => ({}),
_72: () => ({}),
_73: x0 => new window.flutterCanvasKit.Font(x0),
_74: (x0,x1) => ({ambient: x0,spot: x1}),
_75: (x0,x1,x2,x3,x4) => ({width: x0,height: x1,colorType: x2,alphaType: x3,colorSpace: x4}),
_76: (x0,x1,x2,x3,x4) => ({width: x0,height: x1,colorType: x2,alphaType: x3,colorSpace: x4}),
_81: x0 => x0.MakeLinearToSRGBGamma(),
_82: x0 => x0.MakeSRGBToLinearGamma(),
_83: (x0,x1,x2) => x0.MakeCompose(x1,x2),
_85: x0 => x0.remove(),
_86: x0 => x0.remove(),
_87: (x0,x1) => x0.append(x1),
_88: x0 => x0.remove(),
_89: (x0,x1,x2) => x0.insertBefore(x1,x2),
_90: x0 => x0.remove(),
_91: (x0,x1) => x0.append(x1),
_92: (x0,x1) => x0.append(x1),
_93: (x0,x1) => x0.append(x1),
_94: (x0,x1) => x0.append(x1),
_95: (x0,x1) => x0.append(x1),
_96: (x0,x1) => x0.append(x1),
_98: x0 => x0.remove(),
_99: (x0,x1,x2) => x0.insertBefore(x1,x2),
_100: (x0,x1) => x0.append(x1),
_101: (x0,x1) => x0.removeChild(x1),
_103: x0 => x0.delete(),
_104: x0 => x0.delete(),
_105: x0 => x0.Make(),
_106: x0 => x0.Make(),
_107: x0 => x0.enableFontFallback(),
_108: (x0,x1) => x0.setDefaultFontManager(x1),
_110: x0 => x0.clone(),
_115: x0 => x0.makeImageAtCurrentFrame(),
_116: (x0,x1,x2) => x0.register(x1,x2),
_117: x0 => x0.delete(),
_118: (x0,x1) => x0.setBlendMode(x1),
_119: (x0,x1) => x0.setStyle(x1),
_120: (x0,x1) => x0.setStrokeCap(x1),
_121: (x0,x1) => x0.setStrokeJoin(x1),
_122: (x0,x1) => x0.setColorFilter(x1),
_123: (x0,x1) => x0.setShader(x1),
_124: (x0,x1) => x0.setMaskFilter(x1),
_125: (x0,x1) => x0.setShader(x1),
_126: (x0,x1) => x0.setColorFilter(x1),
_127: (x0,x1) => x0.setImageFilter(x1),
_128: x0 => globalThis.window.flutterCanvasKit.Free(x0),
_129: (x0,x1) => x0.setFillType(x1),
_132: (x0,x1) => x0.setFillType(x1),
_133: (x0,x1) => x0.setFillType(x1),
_135: x0 => x0.close(),
_136: x0 => x0.reset(),
_137: x0 => x0.copy(),
_141: x0 => x0.makeImageSnapshot(),
_142: x0 => x0.finishRecordingAsPicture(),
_143: x0 => x0.delete(),
_144: (x0,x1) => x0.append(x1),
_145: (x0,x1) => x0.transferFromImageBitmap(x1),
_146: x0 => x0.remove(),
_147: x0 => x0.releaseResourcesAndAbandonContext(),
_148: x0 => x0.delete(),
_149: x0 => x0.stopPropagation(),
_150: x0 => x0.preventDefault(),
_151: x0 => x0.preventDefault(),
_152: x0 => x0.remove(),
_153: (x0,x1) => x0.append(x1),
_154: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_155: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_156: x0 => x0.getCanvas(),
_157: x0 => x0.flush(),
_158: x0 => x0.dispose(),
_159: (x0,x1) => x0.ParagraphStyle(x1),
_160: (x0,x1) => x0.TextStyle(x1),
_161: (x0,x1,x2) => x0.MakeFromFontCollection(x1,x2),
_162: x0 => x0.build(),
_163: x0 => x0.delete(),
_164: x0 => x0.pop(),
_165: (x0,x1,x2,x3) => x0.pushPaintStyle(x1,x2,x3),
_166: (x0,x1) => x0.pushStyle(x1),
_167: x0 => x0.select(),
_168: (x0,x1) => x0.append(x1),
_169: x0 => x0.remove(),
_172: x0 => x0.unlock(),
_177: x0 => x0.getReader(),
_185: x0 => new URL(x0),
_186: (x0,x1) => new URL(x0,x1),
_189: x0 => new MutationObserver(x0),
_206: (x0,x1) => new OffscreenCanvas(x0,x1),
_208: (x0,x1,x2) => x0.addEventListener(x1,x2),
_209: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_212: x0 => new ResizeObserver(x0),
_214: x0 => ({createScriptURL: x0}),
_215: (x0,x1) => new Intl.Segmenter(x0,x1),
_216: x0 => x0.next(),
_217: (x0,x1) => new Intl.v8BreakIterator(x0,x1),
_219: x0 => new window.FinalizationRegistry(x0),
_294: x0 => x0.close(),
_295: (x0,x1,x2,x3,x4) => ({type: x0,data: x1,premultiplyAlpha: x2,colorSpaceConversion: x3,preferAnimation: x4}),
_296: x0 => new window.ImageDecoder(x0),
_297: x0 => x0.close(),
_298: x0 => ({frameIndex: x0}),
_299: (x0,x1) => x0.decode(x1),
_302: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._302(f,arguments.length,x0) }),
_303: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._303(f,arguments.length,x0) }),
_304: (x0,x1) => ({addView: x0,removeView: x1}),
_305: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._305(f,arguments.length,x0) }),
_306: f => finalizeWrapper(f, function() { return dartInstance.exports._306(f,arguments.length) }),
_307: (x0,x1) => ({initializeEngine: x0,autoStart: x1}),
_308: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._308(f,arguments.length,x0) }),
_309: x0 => ({runApp: x0}),
_310: x0 => new Uint8Array(x0),
_312: x0 => x0.preventDefault(),
_313: x0 => x0.stopPropagation(),
_314: (x0,x1) => x0.addListener(x1),
_315: (x0,x1) => x0.removeListener(x1),
_316: (x0,x1) => x0.prepend(x1),
_317: x0 => x0.remove(),
_318: x0 => x0.disconnect(),
_319: (x0,x1) => x0.addListener(x1),
_320: (x0,x1) => x0.removeListener(x1),
_322: (x0,x1) => x0.append(x1),
_323: x0 => x0.remove(),
_324: x0 => x0.stopPropagation(),
_328: x0 => x0.preventDefault(),
_329: (x0,x1) => x0.append(x1),
_330: x0 => x0.remove(),
_331: x0 => x0.preventDefault(),
_341: (x0,x1) => x0.append(x1),
_342: (x0,x1) => x0.append(x1),
_343: (x0,x1) => x0.append(x1),
_344: x0 => x0.remove(),
_345: x0 => x0.remove(),
_346: x0 => x0.remove(),
_347: (x0,x1) => x0.appendChild(x1),
_348: (x0,x1) => x0.appendChild(x1),
_349: x0 => x0.remove(),
_350: (x0,x1) => x0.append(x1),
_351: (x0,x1) => x0.append(x1),
_352: x0 => x0.remove(),
_353: (x0,x1) => x0.append(x1),
_354: (x0,x1) => x0.append(x1),
_355: (x0,x1,x2) => x0.insertBefore(x1,x2),
_356: (x0,x1) => x0.append(x1),
_357: (x0,x1,x2) => x0.insertBefore(x1,x2),
_358: x0 => x0.remove(),
_359: x0 => x0.remove(),
_360: (x0,x1) => x0.append(x1),
_361: x0 => x0.remove(),
_362: (x0,x1) => x0.append(x1),
_363: x0 => x0.remove(),
_364: x0 => x0.remove(),
_365: x0 => x0.getBoundingClientRect(),
_366: x0 => x0.remove(),
_367: x0 => x0.blur(),
_368: x0 => x0.remove(),
_369: x0 => x0.blur(),
_370: x0 => x0.remove(),
_383: (x0,x1) => x0.append(x1),
_384: x0 => x0.remove(),
_385: (x0,x1) => x0.append(x1),
_386: (x0,x1,x2) => x0.insertBefore(x1,x2),
_387: x0 => x0.preventDefault(),
_388: x0 => x0.preventDefault(),
_389: x0 => x0.preventDefault(),
_390: x0 => x0.preventDefault(),
_391: x0 => x0.remove(),
_392: (x0,x1) => x0.observe(x1),
_393: x0 => x0.disconnect(),
_394: (x0,x1) => x0.appendChild(x1),
_395: (x0,x1) => x0.appendChild(x1),
_396: (x0,x1) => x0.appendChild(x1),
_397: (x0,x1) => x0.append(x1),
_400: (x0,x1) => x0.append(x1),
_401: (x0,x1) => x0.appendChild(x1),
_402: (x0,x1) => x0.append(x1),
_403: x0 => x0.remove(),
_404: (x0,x1) => x0.append(x1),
_408: (x0,x1) => x0.appendChild(x1),
_409: x0 => x0.remove(),
_410: x0 => globalThis.window.flutterCanvasKit = x0,
_411: () => globalThis.window.flutterCanvasKit,
_412: () => globalThis.window.flutterCanvasKitLoaded,
_413: x0 => x0.BlendMode,
_414: x0 => x0.PaintStyle,
_415: x0 => x0.StrokeCap,
_416: x0 => x0.StrokeJoin,
_417: x0 => x0.BlurStyle,
_418: x0 => x0.TileMode,
_419: x0 => x0.FilterMode,
_420: x0 => x0.MipmapMode,
_421: x0 => x0.FillType,
_422: x0 => x0.AlphaType,
_423: x0 => x0.ColorType,
_425: x0 => x0.ClipOp,
_427: x0 => x0.VertexMode,
_428: x0 => x0.RectHeightStyle,
_429: x0 => x0.RectWidthStyle,
_431: x0 => x0.TextAlign,
_432: x0 => x0.TextHeightBehavior,
_433: x0 => x0.TextDirection,
_434: x0 => x0.FontWeight,
_435: x0 => x0.FontSlant,
_436: (x0,x1) => x0.MakeAnimatedImageFromEncoded(x1),
_437: x0 => x0.Shader,
_438: x0 => x0.MaskFilter,
_439: x0 => x0.ColorFilter,
_440: x0 => x0.ImageFilter,
_442: (x0,x1) => x0.computeTonalColors(x1),
_443: (x0,x1,x2,x3,x4,x5) => x0.MakeVertices(x1,x2,x3,x4,x5),
_444: x0 => x0.ParagraphBuilder,
_451: x0 => x0.NoDecoration,
_452: x0 => x0.UnderlineDecoration,
_453: x0 => x0.OverlineDecoration,
_454: x0 => x0.LineThroughDecoration,
_455: x0 => x0.DecorationStyle,
_456: x0 => x0.TextBaseline,
_457: x0 => x0.PlaceholderAlignment,
_459: x0 => x0.TypefaceFontProvider,
_460: x0 => x0.FontCollection,
_461: x0 => x0.Typeface,
_462: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_463: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_465: (x0,x1) => x0.MakeGrContext(x1),
_466: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeOnScreenGLSurface(x1,x2,x3,x4,x5,x6),
_471: (x0,x1,x2,x3) => x0.MakeImage(x1,x2,x3),
_472: (x0,x1,x2) => x0.MakeLazyImageFromTextureSource(x1,x2),
_474: (x0,x1) => x0.default(x1),
_475: f => finalizeWrapper(f, function(x0,x1) { return dartInstance.exports._475(f,arguments.length,x0,x1) }),
_476: () => globalThis.window.flutterCanvasKit.ColorSpace.SRGB,
_484: (x0,x1) => x0.setResourceCacheLimitBytes(x1),
_488: x0 => x0.Upright,
_489: x0 => x0.Italic,
_491: x0 => x0.Thin,
_492: x0 => x0.ExtraLight,
_493: x0 => x0.Light,
_494: x0 => x0.Normal,
_495: x0 => x0.Medium,
_496: x0 => x0.SemiBold,
_497: x0 => x0.Bold,
_498: x0 => x0.ExtraBold,
_499: x0 => x0.ExtraBlack,
_503: x0 => x0.value,
_504: x0 => x0.RTL,
_505: x0 => x0.LTR,
_506: x0 => x0.value,
_507: x0 => x0.Left,
_508: x0 => x0.Right,
_509: x0 => x0.Center,
_510: x0 => x0.Justify,
_511: x0 => x0.Start,
_512: x0 => x0.End,
_514: x0 => x0.All,
_515: x0 => x0.DisableFirstAscent,
_516: x0 => x0.DisableLastDescent,
_517: x0 => x0.DisableAll,
_519: x0 => x0.Tight,
_520: x0 => x0.Max,
_521: x0 => x0.IncludeLineSpacingMiddle,
_522: x0 => x0.IncludeLineSpacingTop,
_523: x0 => x0.IncludeLineSpacingBottom,
_524: x0 => x0.Strut,
_526: x0 => x0.Tight,
_527: x0 => x0.Max,
_529: x0 => x0.Triangles,
_530: x0 => x0.TrianglesStrip,
_531: x0 => x0.TriangleFan,
_537: x0 => x0.Difference,
_538: x0 => x0.Intersect,
_540: x0 => x0.Winding,
_541: x0 => x0.EvenOdd,
_549: x0 => x0.Normal,
_550: x0 => x0.Solid,
_551: x0 => x0.Outer,
_552: x0 => x0.Inner,
_554: x0 => x0.Butt,
_555: x0 => x0.Round,
_556: x0 => x0.Square,
_558: x0 => x0.Stroke,
_559: x0 => x0.Fill,
_561: x0 => x0.Clear,
_562: x0 => x0.Src,
_563: x0 => x0.Dst,
_564: x0 => x0.SrcOver,
_565: x0 => x0.DstOver,
_566: x0 => x0.SrcIn,
_567: x0 => x0.DstIn,
_568: x0 => x0.SrcOut,
_569: x0 => x0.DstOut,
_570: x0 => x0.SrcATop,
_571: x0 => x0.DstATop,
_572: x0 => x0.Xor,
_573: x0 => x0.Plus,
_574: x0 => x0.Modulate,
_575: x0 => x0.Screen,
_576: x0 => x0.Overlay,
_577: x0 => x0.Darken,
_578: x0 => x0.Lighten,
_579: x0 => x0.ColorDodge,
_580: x0 => x0.ColorBurn,
_581: x0 => x0.HardLight,
_582: x0 => x0.SoftLight,
_583: x0 => x0.Difference,
_584: x0 => x0.Exclusion,
_585: x0 => x0.Multiply,
_586: x0 => x0.Hue,
_587: x0 => x0.Saturation,
_588: x0 => x0.Color,
_589: x0 => x0.Luminosity,
_591: x0 => x0.Miter,
_592: x0 => x0.Round,
_593: x0 => x0.Bevel,
_595: x0 => x0.Clamp,
_596: x0 => x0.Repeat,
_597: x0 => x0.Mirror,
_598: x0 => x0.Decal,
_600: x0 => x0.Nearest,
_601: x0 => x0.Linear,
_603: x0 => x0.None,
_605: x0 => x0.Linear,
_608: x0 => x0.Premul,
_614: x0 => x0.RGBA_8888,
_623: x0 => x0.getFrameCount(),
_625: x0 => x0.getRepetitionCount(),
_626: x0 => x0.currentFrameDuration(),
_627: x0 => x0.decodeNextFrame(),
_635: x0 => x0.width(),
_636: x0 => x0.height(),
_638: (x0,x1,x2,x3,x4,x5) => x0.makeShaderCubic(x1,x2,x3,x4,x5),
_639: (x0,x1,x2,x3,x4,x5) => x0.makeShaderOptions(x1,x2,x3,x4,x5),
_640: (x0,x1,x2,x3) => x0.readPixels(x1,x2,x3),
_642: (x0,x1) => x0.isAliasOf(x1),
_645: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeLinearGradient(x1,x2,x3,x4,x5,x6),
_646: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.MakeRadialGradient(x1,x2,x3,x4,x5,x6,x7),
_647: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.MakeTwoPointConicalGradient(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_650: (x0,x1,x2,x3) => x0.MakeBlur(x1,x2,x3),
_653: (x0,x1) => x0.setStrokeWidth(x1),
_656: (x0,x1) => x0.setAntiAlias(x1),
_658: (x0,x1) => x0.setColorInt(x1),
_663: (x0,x1) => x0.setStrokeMiter(x1),
_667: (x0,x1,x2) => x0.MakeBlend(x1,x2),
_668: (x0,x1) => x0.MakeMatrix(x1),
_675: (x0,x1,x2,x3,x4) => x0.MakeBlur(x1,x2,x3,x4),
_676: (x0,x1,x2,x3) => x0.MakeMatrixTransform(x1,x2,x3),
_684: (x0,x1) => x0.getOutputBounds(x1),
_688: () => globalThis.Float32Array,
_690: (x0,x1) => globalThis.window.flutterCanvasKit.Malloc(x0,x1),
_694: x0 => x0.toTypedArray(),
_702: (x0,x1,x2,x3) => x0.addOval(x1,x2,x3),
_703: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11) => x0.addPath(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11),
_706: (x0,x1,x2) => x0.addRRect(x1,x2),
_707: (x0,x1) => x0.addRect(x1),
_709: (x0,x1,x2,x3,x4) => x0.arcToOval(x1,x2,x3,x4),
_710: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.arcToRotated(x1,x2,x3,x4,x5,x6,x7),
_713: (x0,x1,x2) => x0.contains(x1,x2),
_714: (x0,x1,x2,x3,x4,x5,x6) => x0.cubicTo(x1,x2,x3,x4,x5,x6),
_715: x0 => x0.getBounds(),
_717: (x0,x1,x2) => x0.lineTo(x1,x2),
_718: (x0,x1,x2) => x0.moveTo(x1,x2),
_729: x0 => x0.toSVGString(),
_733: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.transform(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_745: (x0,x1,x2) => x0.beginRecording(x1,x2),
_748: (x0,x1) => x0.clear(x1),
_749: (x0,x1,x2,x3) => x0.clipPath(x1,x2,x3),
_750: (x0,x1,x2,x3) => x0.clipRRect(x1,x2,x3),
_751: (x0,x1,x2,x3) => x0.clipRect(x1,x2,x3),
_754: (x0,x1,x2,x3,x4,x5) => x0.drawArc(x1,x2,x3,x4,x5),
_756: (x0,x1,x2,x3,x4) => x0.drawCircle(x1,x2,x3,x4),
_758: (x0,x1,x2,x3) => x0.drawDRRect(x1,x2,x3),
_762: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectCubic(x1,x2,x3,x4,x5,x6),
_763: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectOptions(x1,x2,x3,x4,x5,x6),
_765: (x0,x1,x2,x3,x4,x5) => x0.drawLine(x1,x2,x3,x4,x5),
_767: (x0,x1,x2) => x0.drawOval(x1,x2),
_771: (x0,x1,x2) => x0.drawRRect(x1,x2),
_772: (x0,x1,x2) => x0.drawRect(x1,x2),
_773: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.drawShadow(x1,x2,x3,x4,x5,x6,x7),
_776: x0 => x0.save(),
_777: x0 => x0.getSaveCount(),
_778: (x0,x1,x2,x3,x4) => x0.saveLayer(x1,x2,x3,x4),
_780: (x0,x1) => x0.restoreToCount(x1),
_781: (x0,x1,x2,x3) => x0.rotate(x1,x2,x3),
_782: (x0,x1,x2) => x0.scale(x1,x2),
_784: (x0,x1) => x0.concat(x1),
_785: (x0,x1,x2) => x0.translate(x1,x2),
_789: (x0,x1,x2,x3) => x0.drawParagraph(x1,x2,x3),
_791: x0 => x0.cullRect(),
_795: (x0,x1) => x0.addText(x1),
_799: (x0,x1,x2,x3,x4,x5) => x0.addPlaceholder(x1,x2,x3,x4,x5),
_801: x0 => x0.getText(),
_804: (x0,x1) => x0.setWordsUtf16(x1),
_806: (x0,x1) => x0.setGraphemeBreaksUtf16(x1),
_808: (x0,x1) => x0.setLineBreaksUtf16(x1),
_811: (x0,x1) => x0.textAlign = x1,
_812: (x0,x1) => x0.textDirection = x1,
_813: (x0,x1) => x0.heightMultiplier = x1,
_814: (x0,x1) => x0.textHeightBehavior = x1,
_815: (x0,x1) => x0.maxLines = x1,
_816: (x0,x1) => x0.ellipsis = x1,
_817: (x0,x1) => x0.textStyle = x1,
_818: (x0,x1) => x0.strutStyle = x1,
_819: (x0,x1) => x0.replaceTabCharacters = x1,
_820: (x0,x1) => x0.applyRoundingHack = x1,
_821: x0 => x0.Solid,
_822: x0 => x0.Double,
_823: x0 => x0.Dotted,
_824: x0 => x0.Dashed,
_825: x0 => x0.Wavy,
_827: x0 => x0.Alphabetic,
_828: x0 => x0.Ideographic,
_830: x0 => x0.Baseline,
_831: x0 => x0.AboveBaseline,
_832: x0 => x0.BelowBaseline,
_833: x0 => x0.Top,
_834: x0 => x0.Bottom,
_835: x0 => x0.Middle,
_837: (x0,x1) => x0.backgroundColor = x1,
_838: (x0,x1) => x0.color = x1,
_839: (x0,x1) => x0.foregroundColor = x1,
_840: (x0,x1) => x0.decoration = x1,
_841: (x0,x1) => x0.decorationThickness = x1,
_842: (x0,x1) => x0.decorationColor = x1,
_843: (x0,x1) => x0.decorationStyle = x1,
_844: (x0,x1) => x0.textBaseline = x1,
_845: (x0,x1) => x0.fontSize = x1,
_846: (x0,x1) => x0.letterSpacing = x1,
_847: (x0,x1) => x0.wordSpacing = x1,
_848: (x0,x1) => x0.heightMultiplier = x1,
_849: (x0,x1) => x0.halfLeading = x1,
_850: (x0,x1) => x0.locale = x1,
_851: (x0,x1) => x0.fontFamilies = x1,
_852: (x0,x1) => x0.fontStyle = x1,
_854: (x0,x1) => x0.fontFeatures = x1,
_855: (x0,x1) => x0.fontVariations = x1,
_856: (x0,x1) => x0.fontFamilies = x1,
_857: (x0,x1) => x0.fontStyle = x1,
_858: (x0,x1) => x0.fontSize = x1,
_859: (x0,x1) => x0.heightMultiplier = x1,
_860: (x0,x1) => x0.halfLeading = x1,
_862: (x0,x1) => x0.strutEnabled = x1,
_864: (x0,x1) => x0.weight = x1,
_865: (x0,x1) => x0.slant = x1,
_869: (x0,x1) => x0.name = x1,
_870: (x0,x1) => x0.value = x1,
_871: (x0,x1) => x0.axis = x1,
_872: (x0,x1) => x0.value = x1,
_873: (x0,x1) => x0.getGlyphIDs(x1),
_874: (x0,x1,x2,x3) => x0.getGlyphBounds(x1,x2,x3),
_879: (x0,x1,x2) => x0.registerFont(x1,x2),
_884: x0 => x0.startIndex,
_885: x0 => x0.endIndex,
_888: x0 => x0.isHardBreak,
_889: x0 => x0.ascent,
_890: x0 => x0.descent,
_892: x0 => x0.width,
_893: x0 => x0.left,
_894: x0 => x0.baseline,
_895: x0 => x0.lineNumber,
_896: x0 => x0.graphemeLayoutBounds,
_897: x0 => x0.dir,
_898: x0 => x0.graphemeClusterTextRange,
_899: x0 => x0.rect,
_901: x0 => x0.dir,
_903: x0 => x0.getAlphabeticBaseline(),
_904: x0 => x0.didExceedMaxLines(),
_905: x0 => x0.getHeight(),
_907: x0 => x0.getIdeographicBaseline(),
_908: x0 => x0.getLineMetrics(),
_909: (x0,x1) => x0.getLineMetricsAt(x1),
_910: x0 => x0.getNumberOfLines(),
_912: x0 => x0.getLongestLine(),
_914: x0 => x0.getMaxIntrinsicWidth(),
_915: x0 => x0.getMinIntrinsicWidth(),
_916: x0 => x0.getMaxWidth(),
_917: (x0,x1,x2,x3,x4) => x0.getRectsForRange(x1,x2,x3,x4),
_918: x0 => x0.getRectsForPlaceholders(),
_919: (x0,x1,x2) => x0.getGlyphPositionAtCoordinate(x1,x2),
_920: (x0,x1) => x0.getGlyphInfoAt(x1),
_922: (x0,x1,x2) => x0.getClosestGlyphInfoAtCoordinate(x1,x2),
_923: (x0,x1) => x0.getWordBoundary(x1),
_924: (x0,x1) => x0.layout(x1),
_926: x0 => x0.affinity,
_927: x0 => x0.pos,
_928: x0 => x0.start,
_929: x0 => x0.end,
_931: x0 => x0.ambient,
_932: x0 => x0.spot,
_936: (x0,x1) => x0.MakeFreeTypeFaceFromData(x1),
_938: x0 => x0.isDeleted(),
_964: x0 => globalThis.window.flutterCanvasKit.RuntimeEffect.Make(x0),
_965: (x0,x1) => x0.makeShader(x1),
_966: (x0,x1,x2) => x0.makeShaderWithChildren(x1,x2),
_967: x0 => x0.toString(),
_968: (x0,x1,x2) => x0.set(x1,x2),
_969: () => globalThis.window.flutterConfiguration,
_970: x0 => x0.assetBase,
_971: x0 => x0.canvasKitBaseUrl,
_972: x0 => x0.canvasKitVariant,
_973: x0 => x0.canvasKitForceCpuOnly,
_974: x0 => x0.canvasKitMaximumSurfaces,
_975: x0 => x0.debugShowSemanticsNodes,
_976: x0 => x0.hostElement,
_977: x0 => x0.multiViewEnabled,
_978: x0 => x0.nonce,
_980: x0 => x0.fontFallbackBaseUrl,
_981: x0 => x0.useColorEmoji,
_985: x0 => x0.console,
_986: x0 => x0.devicePixelRatio,
_987: x0 => x0.document,
_988: x0 => x0.history,
_989: x0 => x0.innerHeight,
_990: x0 => x0.innerWidth,
_991: x0 => x0.location,
_992: x0 => x0.navigator,
_993: x0 => x0.visualViewport,
_994: x0 => x0.performance,
_995: (x0,x1) => x0.fetch(x1),
_1000: (x0,x1) => x0.dispatchEvent(x1),
_1001: (x0,x1) => x0.matchMedia(x1),
_1002: (x0,x1) => x0.getComputedStyle(x1),
_1004: x0 => x0.screen,
_1005: (x0,x1) => x0.requestAnimationFrame(x1),
_1006: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1006(f,arguments.length,x0) }),
_1009: x0 => x0.trustedTypes,
_1010: (x0,x1) => x0.warn(x1),
_1011: (x0,x1) => x0.error(x1),
_1012: (x0,x1) => x0.debug(x1),
_1013: () => globalThis.window,
_1014: () => globalThis.Intl,
_1015: () => globalThis.Symbol,
_1017: (x0,x1,x2,x3,x4) => globalThis.createImageBitmap(x0,x1,x2,x3,x4),
_1018: x0 => x0.clipboard,
_1019: x0 => x0.maxTouchPoints,
_1020: x0 => x0.vendor,
_1021: x0 => x0.language,
_1022: x0 => x0.platform,
_1023: x0 => x0.userAgent,
_1024: x0 => x0.languages,
_1025: x0 => x0.documentElement,
_1026: (x0,x1) => x0.querySelector(x1),
_1029: (x0,x1) => x0.createElement(x1),
_1031: (x0,x1) => x0.execCommand(x1),
_1033: (x0,x1,x2) => x0.createElementNS(x1,x2),
_1035: (x0,x1) => x0.createTextNode(x1),
_1036: (x0,x1) => x0.createEvent(x1),
_1040: x0 => x0.head,
_1041: x0 => x0.body,
_1042: (x0,x1) => x0.title = x1,
_1045: x0 => x0.activeElement,
_1047: x0 => x0.visibilityState,
_1048: () => globalThis.document,
_1049: (x0,x1,x2) => x0.addEventListener(x1,x2),
_1050: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1051: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1052: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_1053: (x0,x1,x2,x3) => x0.removeEventListener(x1,x2,x3),
_1055: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1055(f,arguments.length,x0) }),
_1056: x0 => x0.target,
_1058: x0 => x0.timeStamp,
_1059: x0 => x0.type,
_1061: x0 => x0.preventDefault(),
_1065: (x0,x1,x2,x3) => x0.initEvent(x1,x2,x3),
_1069: x0 => x0.baseURI,
_1070: x0 => x0.firstChild,
_1073: x0 => x0.lastChild,
_1076: x0 => x0.parentElement,
_1078: x0 => x0.parentNode,
_1079: x0 => x0.nextSibling,
_1081: (x0,x1) => x0.removeChild(x1),
_1082: (x0,x1) => x0.removeChild(x1),
_1083: x0 => x0.isConnected,
_1084: (x0,x1) => x0.textContent = x1,
_1085: (x0,x1) => x0.cloneNode(x1),
_1087: (x0,x1) => x0.contains(x1),
_1091: x0 => x0.children,
_1095: x0 => x0.clientHeight,
_1096: x0 => x0.clientWidth,
_1097: x0 => x0.offsetHeight,
_1098: x0 => x0.offsetWidth,
_1099: x0 => x0.id,
_1100: (x0,x1) => x0.id = x1,
_1103: (x0,x1) => x0.spellcheck = x1,
_1104: x0 => x0.tagName,
_1105: x0 => x0.style,
_1107: (x0,x1) => x0.append(x1),
_1108: (x0,x1) => x0.getAttribute(x1),
_1109: x0 => x0.getBoundingClientRect(),
_1111: (x0,x1) => x0.querySelector(x1),
_1112: (x0,x1) => x0.closest(x1),
_1114: (x0,x1) => x0.querySelectorAll(x1),
_1115: x0 => x0.remove(),
_1116: (x0,x1,x2) => x0.setAttribute(x1,x2),
_1118: (x0,x1) => x0.removeAttribute(x1),
_1119: (x0,x1) => x0.tabIndex = x1,
_1121: (x0,x1) => x0.focus(x1),
_1122: x0 => x0.scrollTop,
_1123: (x0,x1) => x0.scrollTop = x1,
_1124: x0 => x0.scrollLeft,
_1125: (x0,x1) => x0.scrollLeft = x1,
_1126: x0 => x0.classList,
_1127: (x0,x1) => x0.className = x1,
_1131: (x0,x1) => x0.getElementsByClassName(x1),
_1132: x0 => x0.click(),
_1133: (x0,x1) => x0.hasAttribute(x1),
_1136: (x0,x1) => x0.attachShadow(x1),
_1140: (x0,x1) => x0.getPropertyValue(x1),
_1142: (x0,x1,x2,x3) => x0.setProperty(x1,x2,x3),
_1144: (x0,x1) => x0.removeProperty(x1),
_1146: x0 => x0.offsetLeft,
_1147: x0 => x0.offsetTop,
_1148: x0 => x0.offsetParent,
_1150: (x0,x1) => x0.name = x1,
_1151: x0 => x0.content,
_1152: (x0,x1) => x0.content = x1,
_1165: (x0,x1) => x0.nonce = x1,
_1170: x0 => x0.now(),
_1172: (x0,x1) => x0.width = x1,
_1174: (x0,x1) => x0.height = x1,
_1178: (x0,x1) => x0.getContext(x1),
_1181: (x0,x1) => x0.getParameter(x1),
_1182: x0 => x0.SAMPLES,
_1183: x0 => x0.STENCIL_BITS,
_1201: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.drawImage(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_1251: x0 => x0.width,
_1252: x0 => x0.height,
_1256: x0 => x0.status,
_1257: x0 => x0.headers,
_1258: x0 => x0.body,
_1259: x0 => x0.arrayBuffer(),
_1262: (x0,x1) => x0.get(x1),
_1264: x0 => x0.read(),
_1265: x0 => x0.value,
_1266: x0 => x0.done,
_1268: x0 => x0.name,
_1269: x0 => x0.x,
_1270: x0 => x0.y,
_1273: x0 => x0.top,
_1274: x0 => x0.right,
_1275: x0 => x0.bottom,
_1276: x0 => x0.left,
_1285: x0 => x0.height,
_1286: x0 => x0.width,
_1287: (x0,x1) => x0.value = x1,
_1289: (x0,x1) => x0.placeholder = x1,
_1290: (x0,x1) => x0.name = x1,
_1291: x0 => x0.selectionDirection,
_1292: x0 => x0.selectionStart,
_1293: x0 => x0.selectionEnd,
_1296: x0 => x0.value,
_1298: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1303: x0 => x0.readText(),
_1304: (x0,x1) => x0.writeText(x1),
_1305: x0 => x0.altKey,
_1306: x0 => x0.code,
_1307: x0 => x0.ctrlKey,
_1308: x0 => x0.key,
_1309: x0 => x0.keyCode,
_1310: x0 => x0.location,
_1311: x0 => x0.metaKey,
_1312: x0 => x0.repeat,
_1313: x0 => x0.shiftKey,
_1314: x0 => x0.isComposing,
_1315: (x0,x1) => x0.getModifierState(x1),
_1316: x0 => x0.state,
_1319: (x0,x1) => x0.go(x1),
_1320: (x0,x1,x2,x3) => x0.pushState(x1,x2,x3),
_1321: (x0,x1,x2,x3) => x0.replaceState(x1,x2,x3),
_1322: x0 => x0.pathname,
_1323: x0 => x0.search,
_1324: x0 => x0.hash,
_1327: x0 => x0.state,
_1333: f => finalizeWrapper(f, function(x0,x1) { return dartInstance.exports._1333(f,arguments.length,x0,x1) }),
_1335: (x0,x1,x2) => x0.observe(x1,x2),
_1338: x0 => x0.attributeName,
_1339: x0 => x0.type,
_1340: x0 => x0.matches,
_1344: x0 => x0.matches,
_1345: x0 => x0.relatedTarget,
_1346: x0 => x0.clientX,
_1347: x0 => x0.clientY,
_1348: x0 => x0.offsetX,
_1349: x0 => x0.offsetY,
_1352: x0 => x0.button,
_1353: x0 => x0.buttons,
_1354: x0 => x0.ctrlKey,
_1355: (x0,x1) => x0.getModifierState(x1),
_1356: x0 => x0.pointerId,
_1357: x0 => x0.pointerType,
_1358: x0 => x0.pressure,
_1359: x0 => x0.tiltX,
_1360: x0 => x0.tiltY,
_1361: x0 => x0.getCoalescedEvents(),
_1362: x0 => x0.deltaX,
_1363: x0 => x0.deltaY,
_1364: x0 => x0.wheelDeltaX,
_1365: x0 => x0.wheelDeltaY,
_1366: x0 => x0.deltaMode,
_1371: x0 => x0.changedTouches,
_1373: x0 => x0.clientX,
_1374: x0 => x0.clientY,
_1375: x0 => x0.data,
_1376: (x0,x1) => x0.type = x1,
_1377: (x0,x1) => x0.max = x1,
_1378: (x0,x1) => x0.min = x1,
_1379: (x0,x1) => x0.value = x1,
_1380: x0 => x0.value,
_1381: x0 => x0.disabled,
_1382: (x0,x1) => x0.disabled = x1,
_1383: (x0,x1) => x0.placeholder = x1,
_1384: (x0,x1) => x0.name = x1,
_1385: (x0,x1) => x0.autocomplete = x1,
_1386: x0 => x0.selectionDirection,
_1387: x0 => x0.selectionStart,
_1388: x0 => x0.selectionEnd,
_1392: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1399: (x0,x1) => x0.add(x1),
_1402: (x0,x1) => x0.noValidate = x1,
_1403: (x0,x1) => x0.method = x1,
_1404: (x0,x1) => x0.action = x1,
_1407: (x0,x1) => x0.height = x1,
_1408: (x0,x1) => x0.width = x1,
_1409: (x0,x1) => x0.getContext(x1),
_1431: x0 => x0.orientation,
_1432: x0 => x0.width,
_1433: x0 => x0.height,
_1434: (x0,x1) => x0.lock(x1),
_1451: f => finalizeWrapper(f, function(x0,x1) { return dartInstance.exports._1451(f,arguments.length,x0,x1) }),
_1458: (x0,x1,x2) => x0.createPolicy(x1,x2),
_1459: (x0,x1) => x0.createScriptURL(x1),
_1461: x0 => x0.length,
_1462: (x0,x1) => x0.item(x1),
_1463: x0 => x0.length,
_1464: (x0,x1) => x0.item(x1),
_1465: x0 => x0.iterator,
_1466: x0 => x0.Segmenter,
_1467: x0 => x0.v8BreakIterator,
_1468: (x0,x1) => x0.segment(x1),
_1470: x0 => x0.done,
_1471: x0 => x0.value,
_1472: x0 => x0.index,
_1476: (x0,x1) => x0.adoptText(x1),
_1478: x0 => x0.first(),
_1479: x0 => x0.next(),
_1480: x0 => x0.current(),
_1487: () => globalThis.window.FinalizationRegistry,
_1488: () => globalThis.window.OffscreenCanvas,
_1489: () => globalThis.window.createImageBitmap,
_1493: x0 => x0.hostElement,
_1494: x0 => x0.viewConstraints,
_1496: x0 => x0.maxHeight,
_1497: x0 => x0.maxWidth,
_1498: x0 => x0.minHeight,
_1499: x0 => x0.minWidth,
_1500: x0 => x0.loader,
_1501: () => globalThis._flutter,
_1502: (x0,x1) => x0.didCreateEngineInitializer(x1),
_1503: (x0,x1,x2) => x0.call(x1,x2),
_1504: () => globalThis.Promise,
_1505: f => finalizeWrapper(f, function(x0,x1) { return dartInstance.exports._1505(f,arguments.length,x0,x1) }),
_1508: x0 => x0.length,
_1510: () => globalThis.window.ImageDecoder,
_1511: x0 => x0.tracks,
_1515: x0 => x0.image,
_1522: x0 => x0.displayWidth,
_1523: x0 => x0.displayHeight,
_1524: x0 => x0.duration,
_1528: x0 => x0.ready,
_1529: x0 => x0.selectedTrack,
_1530: x0 => x0.repetitionCount,
_1531: x0 => x0.frameCount,
_1574: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1574(f,arguments.length,x0) }),
_1575: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1575(f,arguments.length,x0) }),
_1576: (x0,x1,x2,x3) => x0.open(x1,x2,x3),
_1577: (x0,x1,x2) => x0.setRequestHeader(x1,x2),
_1578: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1578(f,arguments.length,x0) }),
_1579: (x0,x1,x2) => x0.addEventListener(x1,x2),
_1580: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1580(f,arguments.length,x0) }),
_1581: x0 => x0.send(),
_1582: () => new XMLHttpRequest(),
_1584: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1585: (x0,x1,x2) => x0.addEventListener(x1,x2),
_1586: (x0,x1) => x0.createElement(x1),
_1587: (x0,x1,x2) => x0.setAttribute(x1,x2),
_1588: x0 => x0.preventDefault(),
_1589: x0 => x0.preventDefault(),
_1590: (x0,x1) => x0.removeAttribute(x1),
_1591: (x0,x1,x2) => x0.setAttribute(x1,x2),
_1592: (x0,x1,x2) => x0.setAttribute(x1,x2),
_1593: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_1594: (x0,x1,x2,x3) => x0.removeEventListener(x1,x2,x3),
_1595: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1595(f,arguments.length,x0) }),
_1596: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1596(f,arguments.length,x0) }),
_1597: (x0,x1,x2,x3) => x0.open(x1,x2,x3),
_1598: x0 => x0.createRange(),
_1599: (x0,x1) => x0.selectNode(x1),
_1600: x0 => x0.getSelection(),
_1601: x0 => x0.removeAllRanges(),
_1602: (x0,x1) => x0.addRange(x1),
_1603: (x0,x1) => x0.createElement(x1),
_1604: (x0,x1) => x0.add(x1),
_1605: (x0,x1) => x0.append(x1),
_1606: (x0,x1,x2) => x0.insertRule(x1,x2),
_1607: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1607(f,arguments.length,x0) }),
_1608: (x0,x1) => x0.getItem(x1),
_1609: (x0,x1) => x0.removeItem(x1),
_1610: (x0,x1,x2) => x0.setItem(x1,x2),
_1625: x0 => new Array(x0),
_1632: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1632(f,arguments.length,x0) }),
_1633: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1633(f,arguments.length,x0) }),
_1657: (m) => import(m),
_1659: (decoder, codeUnits) => decoder.decode(codeUnits),
_1660: () => new TextDecoder("utf-8", {fatal: true}),
_1661: () => new TextDecoder("utf-8", {fatal: false}),
_1662: v => v.toString(),
_1663: (d, digits) => d.toFixed(digits),
_1667: x0 => new WeakRef(x0),
_1668: x0 => x0.deref(),
_1674: Date.now,
_1676: s => new Date(s * 1000).getTimezoneOffset() * 60 ,
_1677: s => {
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(s)) {
        return NaN;
      }
      return parseFloat(s);
    },
_1678: () => {
          let stackString = new Error().stack.toString();
          let frames = stackString.split('\n');
          let drop = 2;
          if (frames[0] === 'Error') {
              drop += 1;
          }
          return frames.slice(drop).join('\n');
        },
_1679: () => typeof dartUseDateNowForTicks !== "undefined",
_1680: () => 1000 * performance.now(),
_1681: () => Date.now(),
_1682: () => {
      // On browsers return `globalThis.location.href`
      if (globalThis.location != null) {
        return globalThis.location.href;
      }
      return null;
    },
_1683: () => {
        return typeof process != "undefined" &&
               Object.prototype.toString.call(process) == "[object process]" &&
               process.platform == "win32"
      },
_1684: () => new WeakMap(),
_1685: (map, o) => map.get(o),
_1686: (map, o, v) => map.set(o, v),
_1687: () => globalThis.WeakRef,
_1698: s => JSON.stringify(s),
_1699: s => printToConsole(s),
_1700: a => a.join(''),
_1701: (o, a, b) => o.replace(a, b),
_1703: (s, t) => s.split(t),
_1704: s => s.toLowerCase(),
_1705: s => s.toUpperCase(),
_1706: s => s.trim(),
_1707: s => s.trimLeft(),
_1708: s => s.trimRight(),
_1710: (s, p, i) => s.indexOf(p, i),
_1711: (s, p, i) => s.lastIndexOf(p, i),
_1712: (s) => s.replace(/\$/g, "$$$$"),
_1713: Object.is,
_1714: s => s.toUpperCase(),
_1715: s => s.toLowerCase(),
_1716: (a, i) => a.push(i),
_1717: (a, i) => a.splice(i, 1)[0],
_1719: (a, l) => a.length = l,
_1720: a => a.pop(),
_1721: (a, i) => a.splice(i, 1),
_1723: (a, s) => a.join(s),
_1724: (a, s, e) => a.slice(s, e),
_1725: (a, s, e) => a.splice(s, e),
_1726: (a, b) => a == b ? 0 : (a > b ? 1 : -1),
_1727: a => a.length,
_1729: (a, i) => a[i],
_1730: (a, i, v) => a[i] = v,
_1732: (o, offsetInBytes, lengthInBytes) => {
      var dst = new ArrayBuffer(lengthInBytes);
      new Uint8Array(dst).set(new Uint8Array(o, offsetInBytes, lengthInBytes));
      return new DataView(dst);
    },
_1733: (o, start, length) => new Uint8Array(o.buffer, o.byteOffset + start, length),
_1734: (o, start, length) => new Int8Array(o.buffer, o.byteOffset + start, length),
_1735: (o, start, length) => new Uint8ClampedArray(o.buffer, o.byteOffset + start, length),
_1736: (o, start, length) => new Uint16Array(o.buffer, o.byteOffset + start, length),
_1737: (o, start, length) => new Int16Array(o.buffer, o.byteOffset + start, length),
_1738: (o, start, length) => new Uint32Array(o.buffer, o.byteOffset + start, length),
_1739: (o, start, length) => new Int32Array(o.buffer, o.byteOffset + start, length),
_1741: (o, start, length) => new BigInt64Array(o.buffer, o.byteOffset + start, length),
_1742: (o, start, length) => new Float32Array(o.buffer, o.byteOffset + start, length),
_1743: (o, start, length) => new Float64Array(o.buffer, o.byteOffset + start, length),
_1744: (t, s) => t.set(s),
_1746: (o) => new DataView(o.buffer, o.byteOffset, o.byteLength),
_1748: o => o.buffer,
_1749: o => o.byteOffset,
_1750: Function.prototype.call.bind(Object.getOwnPropertyDescriptor(DataView.prototype, 'byteLength').get),
_1751: (b, o) => new DataView(b, o),
_1752: (b, o, l) => new DataView(b, o, l),
_1753: Function.prototype.call.bind(DataView.prototype.getUint8),
_1754: Function.prototype.call.bind(DataView.prototype.setUint8),
_1755: Function.prototype.call.bind(DataView.prototype.getInt8),
_1756: Function.prototype.call.bind(DataView.prototype.setInt8),
_1757: Function.prototype.call.bind(DataView.prototype.getUint16),
_1758: Function.prototype.call.bind(DataView.prototype.setUint16),
_1759: Function.prototype.call.bind(DataView.prototype.getInt16),
_1760: Function.prototype.call.bind(DataView.prototype.setInt16),
_1761: Function.prototype.call.bind(DataView.prototype.getUint32),
_1762: Function.prototype.call.bind(DataView.prototype.setUint32),
_1763: Function.prototype.call.bind(DataView.prototype.getInt32),
_1764: Function.prototype.call.bind(DataView.prototype.setInt32),
_1767: Function.prototype.call.bind(DataView.prototype.getBigInt64),
_1768: Function.prototype.call.bind(DataView.prototype.setBigInt64),
_1769: Function.prototype.call.bind(DataView.prototype.getFloat32),
_1770: Function.prototype.call.bind(DataView.prototype.setFloat32),
_1771: Function.prototype.call.bind(DataView.prototype.getFloat64),
_1772: Function.prototype.call.bind(DataView.prototype.setFloat64),
_1786: (o, t) => o instanceof t,
_1788: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1788(f,arguments.length,x0) }),
_1789: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1789(f,arguments.length,x0) }),
_1790: o => Object.keys(o),
_1791: (ms, c) =>
              setTimeout(() => dartInstance.exports.$invokeCallback(c),ms),
_1792: (handle) => clearTimeout(handle),
_1793: (ms, c) =>
          setInterval(() => dartInstance.exports.$invokeCallback(c), ms),
_1794: (handle) => clearInterval(handle),
_1795: (c) =>
              queueMicrotask(() => dartInstance.exports.$invokeCallback(c)),
_1796: () => Date.now(),
_1803: () => new XMLHttpRequest(),
_1804: (x0,x1,x2,x3) => x0.open(x1,x2,x3),
_1805: (x0,x1,x2) => x0.setRequestHeader(x1,x2),
_1806: (x0,x1) => x0.send(x1),
_1807: x0 => x0.abort(),
_1808: x0 => x0.getAllResponseHeaders(),
_1815: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1815(f,arguments.length,x0) }),
_1816: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._1816(f,arguments.length,x0) }),
_1822: (x0,x1) => x0.key(x1),
_1839: (s, m) => {
          try {
            return new RegExp(s, m);
          } catch (e) {
            return String(e);
          }
        },
_1840: (x0,x1) => x0.exec(x1),
_1841: (x0,x1) => x0.test(x1),
_1842: (x0,x1) => x0.exec(x1),
_1843: (x0,x1) => x0.exec(x1),
_1844: x0 => x0.pop(),
_1848: (x0,x1,x2) => x0[x1] = x2,
_1850: o => o === undefined,
_1851: o => typeof o === 'boolean',
_1852: o => typeof o === 'number',
_1854: o => typeof o === 'string',
_1857: o => o instanceof Int8Array,
_1858: o => o instanceof Uint8Array,
_1859: o => o instanceof Uint8ClampedArray,
_1860: o => o instanceof Int16Array,
_1861: o => o instanceof Uint16Array,
_1862: o => o instanceof Int32Array,
_1863: o => o instanceof Uint32Array,
_1864: o => o instanceof Float32Array,
_1865: o => o instanceof Float64Array,
_1866: o => o instanceof ArrayBuffer,
_1867: o => o instanceof DataView,
_1868: o => o instanceof Array,
_1869: o => typeof o === 'function' && o[jsWrappedDartFunctionSymbol] === true,
_1871: o => {
            const proto = Object.getPrototypeOf(o);
            return proto === Object.prototype || proto === null;
          },
_1872: o => o instanceof RegExp,
_1873: (l, r) => l === r,
_1874: o => o,
_1875: o => o,
_1876: o => o,
_1877: b => !!b,
_1878: o => o.length,
_1881: (o, i) => o[i],
_1882: f => f.dartFunction,
_1883: l => arrayFromDartList(Int8Array, l),
_1884: (data, length) => {
          const jsBytes = new Uint8Array(length);
          const getByte = dartInstance.exports.$uint8ListGet;
          for (let i = 0; i < length; i++) {
            jsBytes[i] = getByte(data, i);
          }
          return jsBytes;
        },
_1885: l => arrayFromDartList(Uint8ClampedArray, l),
_1886: l => arrayFromDartList(Int16Array, l),
_1887: l => arrayFromDartList(Uint16Array, l),
_1888: l => arrayFromDartList(Int32Array, l),
_1889: l => arrayFromDartList(Uint32Array, l),
_1890: l => arrayFromDartList(Float32Array, l),
_1891: l => arrayFromDartList(Float64Array, l),
_1892: (data, length) => {
          const read = dartInstance.exports.$byteDataGetUint8;
          const view = new DataView(new ArrayBuffer(length));
          for (let i = 0; i < length; i++) {
              view.setUint8(i, read(data, i));
          }
          return view;
        },
_1893: l => arrayFromDartList(Array, l),
_1894:       (s, length) => {
        if (length == 0) return '';

        const read = dartInstance.exports.$stringRead1;
        let result = '';
        let index = 0;
        const chunkLength = Math.min(length - index, 500);
        let array = new Array(chunkLength);
        while (index < length) {
          const newChunkLength = Math.min(length - index, 500);
          for (let i = 0; i < newChunkLength; i++) {
            array[i] = read(s, index++);
          }
          if (newChunkLength < chunkLength) {
            array = array.slice(0, newChunkLength);
          }
          result += String.fromCharCode(...array);
        }
        return result;
      }
      ,
_1895:     (s, length) => {
      if (length == 0) return '';

      const read = dartInstance.exports.$stringRead2;
      let result = '';
      let index = 0;
      const chunkLength = Math.min(length - index, 500);
      let array = new Array(chunkLength);
      while (index < length) {
        const newChunkLength = Math.min(length - index, 500);
        for (let i = 0; i < newChunkLength; i++) {
          array[i] = read(s, index++);
        }
        if (newChunkLength < chunkLength) {
          array = array.slice(0, newChunkLength);
        }
        result += String.fromCharCode(...array);
      }
      return result;
    }
    ,
_1896:     (s) => {
      let length = s.length;
      let range = 0;
      for (let i = 0; i < length; i++) {
        range |= s.codePointAt(i);
      }
      const exports = dartInstance.exports;
      if (range < 256) {
        if (length <= 10) {
          if (length == 1) {
            return exports.$stringAllocate1_1(s.codePointAt(0));
          }
          if (length == 2) {
            return exports.$stringAllocate1_2(s.codePointAt(0), s.codePointAt(1));
          }
          if (length == 3) {
            return exports.$stringAllocate1_3(s.codePointAt(0), s.codePointAt(1), s.codePointAt(2));
          }
          if (length == 4) {
            return exports.$stringAllocate1_4(s.codePointAt(0), s.codePointAt(1), s.codePointAt(2), s.codePointAt(3));
          }
          if (length == 5) {
            return exports.$stringAllocate1_5(s.codePointAt(0), s.codePointAt(1), s.codePointAt(2), s.codePointAt(3), s.codePointAt(4));
          }
          if (length == 6) {
            return exports.$stringAllocate1_6(s.codePointAt(0), s.codePointAt(1), s.codePointAt(2), s.codePointAt(3), s.codePointAt(4), s.codePointAt(5));
          }
          if (length == 7) {
            return exports.$stringAllocate1_7(s.codePointAt(0), s.codePointAt(1), s.codePointAt(2), s.codePointAt(3), s.codePointAt(4), s.codePointAt(5), s.codePointAt(6));
          }
          if (length == 8) {
            return exports.$stringAllocate1_8(s.codePointAt(0), s.codePointAt(1), s.codePointAt(2), s.codePointAt(3), s.codePointAt(4), s.codePointAt(5), s.codePointAt(6), s.codePointAt(7));
          }
          if (length == 9) {
            return exports.$stringAllocate1_9(s.codePointAt(0), s.codePointAt(1), s.codePointAt(2), s.codePointAt(3), s.codePointAt(4), s.codePointAt(5), s.codePointAt(6), s.codePointAt(7), s.codePointAt(8));
          }
          if (length == 10) {
            return exports.$stringAllocate1_10(s.codePointAt(0), s.codePointAt(1), s.codePointAt(2), s.codePointAt(3), s.codePointAt(4), s.codePointAt(5), s.codePointAt(6), s.codePointAt(7), s.codePointAt(8), s.codePointAt(9));
          }
        }
        const dartString = exports.$stringAllocate1(length);
        const write = exports.$stringWrite1;
        for (let i = 0; i < length; i++) {
          write(dartString, i, s.codePointAt(i));
        }
        return dartString;
      } else {
        const dartString = exports.$stringAllocate2(length);
        const write = exports.$stringWrite2;
        for (let i = 0; i < length; i++) {
          write(dartString, i, s.charCodeAt(i));
        }
        return dartString;
      }
    }
    ,
_1897: () => ({}),
_1898: () => [],
_1899: l => new Array(l),
_1900: () => globalThis,
_1901: (constructor, args) => {
      const factoryFunction = constructor.bind.apply(
          constructor, [null, ...args]);
      return new factoryFunction();
    },
_1902: (o, p) => p in o,
_1903: (o, p) => o[p],
_1904: (o, p, v) => o[p] = v,
_1905: (o, m, a) => o[m].apply(o, a),
_1907: o => String(o),
_1908: (p, s, f) => p.then(s, f),
_1909: s => {
      if (/[[\]{}()*+?.\\^$|]/.test(s)) {
          s = s.replace(/[[\]{}()*+?.\\^$|]/g, '\\$&');
      }
      return s;
    },
_1911: x0 => x0.input,
_1912: x0 => x0.index,
_1913: x0 => x0.groups,
_1914: x0 => x0.length,
_1916: (x0,x1) => x0[x1],
_1917: (x0,x1) => x0.exec(x1),
_1919: x0 => x0.flags,
_1920: x0 => x0.multiline,
_1921: x0 => x0.ignoreCase,
_1922: x0 => x0.unicode,
_1923: x0 => x0.dotAll,
_1924: (x0,x1) => x0.lastIndex = x1,
_1925: (o, p) => p in o,
_1926: (o, p) => o[p],
_1927: (o, p, v) => o[p] = v,
_1929: () => globalThis.document,
_1930: () => globalThis.window,
_1935: (x0,x1) => x0.height = x1,
_1937: (x0,x1) => x0.width = x1,
_1941: x0 => x0.head,
_1943: x0 => x0.classList,
_1948: (x0,x1) => x0.innerText = x1,
_1949: x0 => x0.style,
_1950: x0 => x0.sheet,
_1952: x0 => x0.offsetX,
_1953: x0 => x0.offsetY,
_1954: x0 => x0.button,
_1967: x0 => x0.status,
_1968: (x0,x1) => x0.responseType = x1,
_1970: x0 => x0.response,
_2022: (x0,x1) => x0.withCredentials = x1,
_2024: x0 => x0.responseURL,
_2025: x0 => x0.status,
_2026: x0 => x0.statusText,
_2028: (x0,x1) => x0.responseType = x1,
_2029: x0 => x0.response,
_2109: x0 => x0.style,
_3841: () => globalThis.window,
_3884: x0 => x0.document,
_3887: x0 => x0.location,
_3906: x0 => x0.navigator,
_4170: x0 => x0.localStorage,
_4178: x0 => x0.href,
_4297: x0 => x0.userAgent,
_4517: x0 => x0.length,
_6500: x0 => x0.target,
_6604: x0 => x0.baseURI,
_6611: x0 => x0.lastChild,
_6621: () => globalThis.document,
_7063: x0 => x0.tagName,
_7072: x0 => x0.shadowRoot,
_11601: (x0,x1) => x0.cursor = x1,
_11611: (x0,x1) => x0.display = x1,
_11775: (x0,x1) => x0.height = x1,
_11987: (x0,x1) => x0.opacity = x1,
_12465: (x0,x1) => x0.width = x1,
_13600: () => globalThis.window.flutterCanvasKit,
_13601: () => globalThis.window._flutter_skwasmInstance
    };

    const baseImports = {
        dart2wasm: dart2wasm,


        Math: Math,
        Date: Date,
        Object: Object,
        Array: Array,
        Reflect: Reflect,
    };

    const jsStringPolyfill = {
        "charCodeAt": (s, i) => s.charCodeAt(i),
        "compare": (s1, s2) => {
            if (s1 < s2) return -1;
            if (s1 > s2) return 1;
            return 0;
        },
        "concat": (s1, s2) => s1 + s2,
        "equals": (s1, s2) => s1 === s2,
        "fromCharCode": (i) => String.fromCharCode(i),
        "length": (s) => s.length,
        "substring": (s, a, b) => s.substring(a, b),
    };

    dartInstance = await WebAssembly.instantiate(await modulePromise, {
        ...baseImports,
        ...(await importObjectPromise),
        "wasm:js-string": jsStringPolyfill,
    });

    return dartInstance;
}

// Call the main function for the instantiated module
// `moduleInstance` is the instantiated dart2wasm module
// `args` are any arguments that should be passed into the main function.
export const invoke = (moduleInstance, ...args) => {
  moduleInstance.exports.$invokeMain(args);
}

